---
- hosts: all
  #remote_user: username specified in /etc/ansible/hosts
  become: yes
  become_user: root
  vars_files:
    - vars/main.yml
    - vars/vault
  tasks:
  - name: Set authorized key, removing all the authorized key already set
    authorized_key:
     user: root
     key: '{{ item }}'
     state: present
     exclusive: True
    with_file:
     - public_keys/web-platform

  - name: make sure we have the GPG key for google cloud repo
    get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /tmp/key.gpg

  - name: install key
    command: apt-key add /tmp/key.gpg

  - name: make sure we have google cloud repo added
    lineinfile:
        dest: /etc/apt/sources.list.d/google-cloud-sdk.list
        line: deb http://packages.cloud.google.com/apt cloud-sdk-xenial main
        create: true

  - name: update package repository
    command: apt-get update

  - name: Infer current kernel Linux version
    command: uname -r
    register: kernel_version

  - name: install the various packages we need
    apt:
      name: '{{ item }}'
      state: present
    with_items:
      - curl
      - dtrx
      - emacs-nox
      - git
      - google-cloud-sdk
      - htop
      - libnss3-tools
      - linux-headers-{{kernel_version.stdout}}
      - nvidia-367
      - nvidia-375
      - nvidia-384
      - python-pip
      - python2.7
      - rsync
      - screen
      - unattended-upgrades
      - virtualenv
      - xauth
      - xvfb

  - name: Disallow password authentication
    lineinfile: dest=/etc/ssh/sshd_config
                regexp="^PasswordAuthentication"
                line="PasswordAuthentication no"
                state=present
    notify: Restart ssh

  - name: checkout the wptdashboard project
    git:
      repo: 'https://github.com/w3c/wptdashboard.git'
      dest: ~/wptdashboard
      force: yes

  - name: checkout the web-platform-tests
    git:
      repo: 'https://github.com/w3c/web-platform-tests.git'
      dest: ~/web-platform-tests
      force: yes

  - name: install python requirements
    pip:
      requirements: ~/wptdashboard/requirements.txt

  - name: make python virtualenv
    pip:
      name: virtualenv
      virtualenv: ~/web-platform-tests/_venv

  - name: make sure we can open enough files
    lineinfile: dest=/etc/systemd/system.conf
      regexp="DefaultLimitNOFILE"
      line="DefaultLimitNOFILE=65536"
      state=present

  - name: copy various files in /files/root/ to /root/
    copy:
      src: files/root/browser-runner.sh
      dest: /root/browser-runner.sh
      owner: root
      group: root
      mode: 0755

  - name: set up browser-runner to run tests for a browser
    lineinfile: dest=/root/browser-runner.sh
      regexp="export BROWSER"
      line="export BROWSER={{ browser }}"
      state=present

  - name: ensure we have the latest google-sdk
    command: pip install --upgrade google-cloud
    async: 0
    poll: 0
    ignore_errors: true

  - name: make a cronjob to run browser-runner.sh
    cron:
      name: "run browsers"
      minute: "*/1"
      job: "/root/browser-runner.sh > /root/browser-runner.log 2>&1"

  - name: make a cronjob to remove browser-running.txt at boot
    cron:
      name: "a job for reboot"
      special_time: reboot
      job: "rm /root/browser-running.txt"

  - name: put the running.ini file in place
    copy:
      src: files/root/running.ini
      dest: /root/wptdashboard/run/running.ini
      owner: root
      group: root
      mode: 0755

  - name: update the running.ini file with ACTUAL SECRETS
    lineinfile: dest=/root/wptdashboard/run/running.ini
                regexp="^sauce_key"
                line="sauce_key = {{ sauce_labs_key }}"
                state=present

  - name: reboot the machine
    command: /sbin/shutdown -r +1
    async: 0
    poll: 0
    ignore_errors: true

  handlers:
    - name: Restart ssh
      service: name=ssh state=restarted
